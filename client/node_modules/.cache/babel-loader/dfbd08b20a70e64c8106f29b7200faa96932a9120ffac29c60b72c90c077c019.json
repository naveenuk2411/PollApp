{"ast":null,"code":"var _jsxFileName = \"/Users/naveen.kumar3/PollReactApp/pollapp/src/pages/ManagePollPage.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Box, Stack, Typography } from \"@mui/material\";\nimport PollCard from \"../components/PollCard\";\nimport axios from \"axios\";\nimport { POLL_SERVER_GET_ALL_POLLS } from \"../constants/Routes\";\nimport { useAuth } from \"../customHooks/useAuth\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ManagePollPage = props => {\n  _s();\n  const [polls, setPolls] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [hasError, setHasError] = React.useState(false);\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n  const {\n    authToken,\n    user\n  } = useAuth();\n  const location = useLocation();\n  const fetchPolls = async () => {\n    setIsLoading(true);\n    setHasError(false);\n    setErrorMessage(\"\");\n    try {\n      const res = await axios.get(`${POLL_SERVER_GET_ALL_POLLS}?user_id=${user === null || user === void 0 ? void 0 : user.id}`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      let pollsData = [];\n      pollsData = res.data.polls.map(poll => {\n        return {\n          id: poll.id,\n          title: poll.title,\n          desciption: poll.description\n        };\n      });\n      setPolls(pollsData);\n    } catch (error) {\n      setHasError(true);\n      setErrorMessage(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  React.useEffect(() => {\n    fetchPolls();\n  }, [location.pathname]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Fetching polls information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : hasError ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Something went wrong from our end\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : polls.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"No polls found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          children: props.pollPageType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          marginTop: \"4em\",\n          columnGap: \"4em\",\n          rowGap: \"4em\",\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          children: polls.map(poll => /*#__PURE__*/_jsxDEV(PollCard, {\n            pollInfo: poll,\n            pollType: props.pollPageType,\n            buttonText: props.pollCardButtonText,\n            onClickHandler: props.selectedPollHandler\n          }, poll.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n_s(ManagePollPage, \"Vq6Fu3Cmi//LuLqdYP/bHaBIGFw=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = ManagePollPage;\nexport default ManagePollPage;\nvar _c;\n$RefreshReg$(_c, \"ManagePollPage\");","map":{"version":3,"names":["React","Box","Stack","Typography","PollCard","axios","POLL_SERVER_GET_ALL_POLLS","useAuth","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","ManagePollPage","props","_s","polls","setPolls","useState","isLoading","setIsLoading","hasError","setHasError","errorMessage","setErrorMessage","authToken","user","location","fetchPolls","res","get","id","headers","Authorization","pollsData","data","map","poll","title","desciption","description","error","message","useEffect","pathname","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","length","pollPageType","direction","marginTop","columnGap","rowGap","display","flexWrap","pollInfo","pollType","buttonText","pollCardButtonText","onClickHandler","selectedPollHandler","_c","$RefreshReg$"],"sources":["/Users/naveen.kumar3/PollReactApp/pollapp/src/pages/ManagePollPage.tsx"],"sourcesContent":["import React from \"react\";\nimport { Alert, Box, Snackbar, Stack, Typography } from \"@mui/material\";\nimport PollCard from \"../components/PollCard\";\nimport { PollPageType } from \"../types/Poll\";\nimport axios from \"axios\";\nimport { POLL_SERVER_GET_ALL_POLLS } from \"../constants/Routes\";\nimport { useAuth } from \"../customHooks/useAuth\";\nimport { useLocation } from \"react-router-dom\";\n\nexport interface PollInfo {\n  id: number;\n  title: string;\n  description: string;\n}\n\ninterface ManagePollPageProps {\n  pollPageType: PollPageType;\n  pollCardButtonText: string;\n  selectedPollHandler: (poll: PollInfo) => void;\n}\n\nconst ManagePollPage = (props: ManagePollPageProps): JSX.Element => {\n  const [polls, setPolls] = React.useState<PollInfo[]>([]);\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\n  const [hasError, setHasError] = React.useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = React.useState<string>(\"\");\n\n  const { authToken, user } = useAuth();\n\n  const location = useLocation();\n  const fetchPolls = async () => {\n    setIsLoading(true);\n    setHasError(false);\n    setErrorMessage(\"\");\n    try {\n      const res = await axios.get(\n        `${POLL_SERVER_GET_ALL_POLLS}?user_id=${user?.id}`,\n        {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n          },\n        }\n      );\n      let pollsData: PollInfo[] = [];\n      pollsData = res.data.polls.map((poll: any) => {\n        return {\n          id: poll.id,\n          title: poll.title,\n          desciption: poll.description,\n        };\n      });\n      setPolls(pollsData);\n    } catch (error) {\n      setHasError(true);\n      setErrorMessage((error as Error).message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  React.useEffect(() => {\n    fetchPolls();\n  }, [location.pathname]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Typography variant=\"h2\">Fetching polls information</Typography>\n      ) : hasError ? (\n        <Typography variant=\"h2\">Something went wrong from our end</Typography>\n      ) : polls.length === 0 ? (\n        <Typography variant=\"h2\">No polls found</Typography>\n      ) : (\n        <>\n          <Box>\n            <Typography variant=\"h2\">{props.pollPageType}</Typography>\n            <Stack\n              direction=\"row\"\n              marginTop=\"4em\"\n              columnGap=\"4em\"\n              rowGap=\"4em\"\n              display=\"flex\"\n              flexWrap=\"wrap\"\n            >\n              {polls.map((poll) => (\n                <PollCard\n                  key={poll.id}\n                  pollInfo={poll}\n                  pollType={props.pollPageType}\n                  buttonText={props.pollCardButtonText}\n                  onClickHandler={props.selectedPollHandler}\n                />\n              ))}\n            </Stack>\n          </Box>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ManagePollPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}