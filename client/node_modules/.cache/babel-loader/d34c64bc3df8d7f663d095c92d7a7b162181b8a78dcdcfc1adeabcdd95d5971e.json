{"ast":null,"code":"var _jsxFileName = \"/Users/naveen.kumar3/PollReactApp/pollapp/src/customHooks/useAuth.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport { Snackbar, Alert } from \"@mui/material\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport SignUpModal from \"../components/SignUpModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext(undefined);\nconst AuthenticatorProvider = props => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [hasError, setHasError] = React.useState(false);\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n  const [user, setUser] = React.useState({\n    id: -1,\n    name: \"\",\n    email: \"\"\n  });\n  const [signUpModalOpen, setSignUpModalOpen] = React.useState(false);\n  const [snackbarOpen, setSnackbarOpen] = React.useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  React.useEffect(() => {\n    if (!isAuthenticated) {\n      navigate(\"/\");\n    }\n  }, [isAuthenticated]);\n  const handleModalOpen = () => {\n    setSignUpModalOpen(true);\n  };\n  const handleModalClose = () => {\n    setSignUpModalOpen(false);\n  };\n  const login = async () => {\n    setIsLoading(true);\n    setHasError(false);\n    setErrorMessage(\"\");\n    setIsAuthenticated(false);\n    setTimeout(() => {\n      setIsLoading(false);\n      setIsAuthenticated(true);\n      setSnackbarOpen(true);\n      handleModalClose();\n    }, 2000);\n  };\n  const logout = () => {\n    setUser({\n      id: -1,\n      name: \"\",\n      email: \"\"\n    });\n    setIsAuthenticated(false);\n  };\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setSnackbarOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      isLoading,\n      login,\n      logout,\n      handleModalOpen\n    },\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SignUpModal, {\n        isOpen: signUpModalOpen,\n        closeModal: handleModalClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: snackbarOpen,\n        autoHideDuration: 4000,\n        onClose: handleSnackbarClose,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: hasError ? \"error\" : \"success\",\n          sx: {\n            width: \"100%\"\n          },\n          onClose: handleSnackbarClose,\n          children: hasError ? \"Failed to log in!\" : \"Succesfully logged in!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), (location.pathname === \"/\" || location.pathname === \"/past-polls\" || isAuthenticated) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: props.children\n      }, void 0, false)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthenticatorProvider, \"37vKyuZhaBwzBQ3u0AyXHmmjSwU=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AuthenticatorProvider;\nconst useAuth = () => {\n  _s2();\n  const context = React.useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be within a Auth Provider\");\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport { AuthenticatorProvider, useAuth };\nvar _c;\n$RefreshReg$(_c, \"AuthenticatorProvider\");","map":{"version":3,"names":["React","Snackbar","Alert","useLocation","useNavigate","SignUpModal","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthContext","createContext","undefined","AuthenticatorProvider","props","_s","isAuthenticated","setIsAuthenticated","useState","isLoading","setIsLoading","hasError","setHasError","errorMessage","setErrorMessage","user","setUser","id","name","email","signUpModalOpen","setSignUpModalOpen","snackbarOpen","setSnackbarOpen","navigate","location","useEffect","handleModalOpen","handleModalClose","login","setTimeout","logout","handleSnackbarClose","event","reason","Provider","value","children","isOpen","closeModal","fileName","_jsxFileName","lineNumber","columnNumber","open","autoHideDuration","onClose","severity","sx","width","pathname","_c","useAuth","_s2","context","useContext","Error","$RefreshReg$"],"sources":["/Users/naveen.kumar3/PollReactApp/pollapp/src/customHooks/useAuth.tsx"],"sourcesContent":["import React from \"react\";\nimport { Snackbar, Alert } from \"@mui/material\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport SignUpModal from \"../components/SignUpModal\";\n\ninterface AuthenitcatorProviderProps {\n  children: React.ReactElement;\n}\n\ntype AuthStateManagement = {\n  isAuthenticated: boolean;\n  user: User;\n  isLoading: boolean;\n  login: () => void;\n  logout: () => void;\n  handleModalOpen: () => void;\n};\n\nconst AuthContext = React.createContext<AuthStateManagement | undefined>(\n  undefined\n);\n\nconst AuthenticatorProvider = (\n  props: AuthenitcatorProviderProps\n): JSX.Element => {\n  const [isAuthenticated, setIsAuthenticated] = React.useState<boolean>(false);\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\n  const [hasError, setHasError] = React.useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = React.useState<string>(\"\");\n  const [user, setUser] = React.useState<User>({\n    id: -1,\n    name: \"\",\n    email: \"\"\n  });\n  const [signUpModalOpen, setSignUpModalOpen] = React.useState<boolean>(false);\n  const [snackbarOpen, setSnackbarOpen] = React.useState<boolean>(false);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  React.useEffect(() => {\n    if (!isAuthenticated) {\n      navigate(\"/\");\n    }\n  }, [isAuthenticated]);\n\n  const handleModalOpen = (): void => {\n    setSignUpModalOpen(true);\n  };\n\n  const handleModalClose = (): void => {\n    setSignUpModalOpen(false);\n  };\n\n  const login = async () => {\n    setIsLoading(true);\n    setHasError(false);\n    setErrorMessage(\"\");\n    setIsAuthenticated(false);\n    setTimeout(() => {\n        setIsLoading(false);\n        setIsAuthenticated(true);\n        setSnackbarOpen(true);\n        handleModalClose();\n    }, 2000)\n  };\n\n  const logout = (): void => {\n    setUser({\n        id: -1,\n        name: \"\",\n        email: \"\"\n    });\n    setIsAuthenticated(false);\n  };\n\n  const handleSnackbarClose = (\n    event?: React.SyntheticEvent | Event,\n    reason?: string\n  ) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setSnackbarOpen(false);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated,\n        user,\n        isLoading,\n        login,\n        logout,\n        handleModalOpen,\n      }}\n    >\n      <>\n        <SignUpModal isOpen={signUpModalOpen} closeModal={handleModalClose} />\n        <Snackbar\n          open={snackbarOpen}\n          autoHideDuration={4000}\n          onClose={handleSnackbarClose}\n        >\n          <Alert\n            severity={hasError ? \"error\" : \"success\"}\n            sx={{ width: \"100%\" }}\n            onClose={handleSnackbarClose}\n          >\n            {hasError ? \"Failed to log in!\" : \"Succesfully logged in!\"}\n          </Alert>\n        </Snackbar>\n        {(location.pathname === \"/\" ||\n          location.pathname === \"/past-polls\" ||\n          isAuthenticated) && <>{props.children}</>}\n      </>\n    </AuthContext.Provider>\n  );\n};\n\nconst useAuth = () => {\n  const context = React.useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be within a Auth Provider\");\n  }\n  return context;\n};\n\nexport { AuthenticatorProvider, useAuth };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}