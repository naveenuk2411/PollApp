{"ast":null,"code":"export function calculateRelativeVotePercentage(voteMap) {\n  let totalVotes = 0;\n  for (let value of voteMap.values()) {\n    totalVotes += value;\n  }\n  let newVoteMap = new Map();\n  for (let key of voteMap.keys()) {\n    let voteCount = voteMap.get(key);\n    newVoteMap.set(key, (voteCount || 0) / totalVotes * 100);\n  }\n  return [newVoteMap, totalVotes];\n}","map":{"version":3,"names":["calculateRelativeVotePercentage","voteMap","totalVotes","value","values","newVoteMap","Map","key","keys","voteCount","get","set"],"sources":["/Users/naveen.kumar3/PollReactApp/pollapp/src/util/RelativeVotePercentage.ts"],"sourcesContent":["export function calculateRelativeVotePercentage(voteMap: Map<number, number>): [Map<number, number>, number] {\n    let totalVotes: number = 0;\n    for (let value of voteMap.values()) {\n        totalVotes += value;\n    }\n\n    let newVoteMap = new Map<number, number>();\n    for (let key of voteMap.keys()) {\n        let voteCount = voteMap.get(key)\n        newVoteMap.set(key, ((voteCount || 0) / totalVotes) * 100)\n    }\n    return [newVoteMap, totalVotes];\n}\n\n"],"mappings":"AAAA,OAAO,SAASA,+BAA+BA,CAACC,OAA4B,EAAiC;EACzG,IAAIC,UAAkB,GAAG,CAAC;EAC1B,KAAK,IAAIC,KAAK,IAAIF,OAAO,CAACG,MAAM,CAAC,CAAC,EAAE;IAChCF,UAAU,IAAIC,KAAK;EACvB;EAEA,IAAIE,UAAU,GAAG,IAAIC,GAAG,CAAiB,CAAC;EAC1C,KAAK,IAAIC,GAAG,IAAIN,OAAO,CAACO,IAAI,CAAC,CAAC,EAAE;IAC5B,IAAIC,SAAS,GAAGR,OAAO,CAACS,GAAG,CAACH,GAAG,CAAC;IAChCF,UAAU,CAACM,GAAG,CAACJ,GAAG,EAAG,CAACE,SAAS,IAAI,CAAC,IAAIP,UAAU,GAAI,GAAG,CAAC;EAC9D;EACA,OAAO,CAACG,UAAU,EAAEH,UAAU,CAAC;AACnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}