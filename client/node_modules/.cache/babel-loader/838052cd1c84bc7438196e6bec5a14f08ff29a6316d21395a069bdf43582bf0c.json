{"ast":null,"code":"var _jsxFileName = \"/Users/naveen.kumar3/PollReactApp/pollapp/src/pages/UpdatePollPage.tsx\",\n  _s = $RefreshSig$();\nimport { Alert, Box, Button, Snackbar, Stack, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useAuth } from \"../customHooks/useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UpdatePollPage = props => {\n  _s();\n  const [pollOptions, setPollOptions] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [hasError, setHasError] = React.useState(false);\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n  const [snackbarOpen, setSnackbarOpen] = React.useState(false);\n  const {\n    authToken,\n    user\n  } = useAuth();\n  const fetchPollOptions = async pollId => {\n    setIsLoading(true);\n    setHasError(false);\n    setErrorMessage(\"\");\n    try {\n      const res = await axios.get(`http://localhost:8000/polls/${pollId}/options`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      let pollOptionsData = [];\n      pollOptionsData = res.data.pollOptions.map(pollOption => {\n        return {\n          id: pollOption.id,\n          text: pollOption.text\n        };\n      });\n      setPollOptions(pollOptionsData);\n    } catch (error) {\n      console.log(\"Error in fetching polls\", error);\n      setHasError(true);\n      setErrorMessage(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const endPollClickHandler = async () => {\n    setIsLoading(true);\n    setHasError(false);\n    setErrorMessage(\"\");\n    try {\n      const res = await axios.put(`http://localhost:8000/polls/${props.poll.id}`, {\n        userId: user === null || user === void 0 ? void 0 : user.id,\n        status: false\n      }, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      setSnackbarOpen(true);\n    } catch (error) {\n      console.log(\"Error in fetching polls\", error);\n      setHasError(true);\n      setErrorMessage(error.message);\n      setSnackbarOpen(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n  React.useEffect(() => {\n    fetchPollOptions(props.poll.id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarOpen,\n      autoHideDuration: 4000,\n      onClose: handleSnackbarClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: hasError ? \"error\" : \"success\",\n        sx: {\n          width: \"100%\"\n        },\n        onClose: handleSnackbarClose,\n        children: hasError ? errorMessage : \"Poll was updated successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Fetching poll information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this) : hasError ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Something went wrong from our end\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        rowGap: 4,\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h2\",\n            children: props.poll.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: props.poll.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), pollOptions.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"No poll options to show for the poll\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Stack, {\n          children: pollOptions.map(pollOption => /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: pollOption.text\n          }, pollOption.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"inline-flex\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            disableElevation: true,\n            onClick: endPollClickHandler,\n            children: \"End poll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n_s(UpdatePollPage, \"2s6Sxs42z0g7cKjIGhfXMrGGX5M=\", false, function () {\n  return [useAuth];\n});\n_c = UpdatePollPage;\nexport default UpdatePollPage;\nvar _c;\n$RefreshReg$(_c, \"UpdatePollPage\");","map":{"version":3,"names":["Alert","Box","Button","Snackbar","Stack","Typography","React","axios","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","UpdatePollPage","props","_s","pollOptions","setPollOptions","useState","isLoading","setIsLoading","hasError","setHasError","errorMessage","setErrorMessage","snackbarOpen","setSnackbarOpen","authToken","user","fetchPollOptions","pollId","res","get","headers","Authorization","pollOptionsData","data","map","pollOption","id","text","error","console","log","message","endPollClickHandler","put","poll","userId","status","handleSnackbarClose","useEffect","children","open","autoHideDuration","onClose","severity","sx","width","fileName","_jsxFileName","lineNumber","columnNumber","variant","rowGap","title","description","length","display","disableElevation","onClick","_c","$RefreshReg$"],"sources":["/Users/naveen.kumar3/PollReactApp/pollapp/src/pages/UpdatePollPage.tsx"],"sourcesContent":["import { Alert, Box, Button, Snackbar, Stack, Typography } from \"@mui/material\";\nimport { PollInfo } from \"./PollsPage\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useAuth } from \"../customHooks/useAuth\";\n\ninterface UpdatePollPageProps {\n  poll: PollInfo;\n}\n\ninterface PollOption {\n  id: number;\n  text: string;\n}\n\nconst UpdatePollPage = (props: UpdatePollPageProps): JSX.Element => {\n  const [pollOptions, setPollOptions] = React.useState<PollOption[]>([]);\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\n  const [hasError, setHasError] = React.useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = React.useState<string>(\"\");\n  const [snackbarOpen, setSnackbarOpen] = React.useState<boolean>(false);\n\n  const { authToken, user } = useAuth();\n\n  const fetchPollOptions = async (pollId: number) => {\n    setIsLoading(true);\n    setHasError(false);\n    setErrorMessage(\"\");\n    try {\n      const res = await axios.get(\n        `http://localhost:8000/polls/${pollId}/options`,\n        {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n          },\n        }\n      );\n      let pollOptionsData: PollOption[] = [];\n      pollOptionsData = res.data.pollOptions.map((pollOption: any) => {\n        return {\n          id: pollOption.id,\n          text: pollOption.text,\n        };\n      });\n      setPollOptions(pollOptionsData);\n    } catch (error) {\n      console.log(\"Error in fetching polls\", error);\n      setHasError(true);\n      setErrorMessage((error as Error).message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const endPollClickHandler = async () => {\n    setIsLoading(true);\n    setHasError(false);\n    setErrorMessage(\"\");\n    try {\n      const res = await axios.put(\n        `http://localhost:8000/polls/${props.poll.id}`,\n        {\n          userId: user?.id,\n          status: false,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n          },\n        }\n      );\n      setSnackbarOpen(true);\n    } catch (error) {\n      console.log(\"Error in fetching polls\", error);\n      setHasError(true);\n      setErrorMessage((error as Error).message);\n      setSnackbarOpen(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n  React.useEffect(() => {\n    fetchPollOptions(props.poll.id);\n  }, []);\n\n  return (\n    <>\n      <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={4000}\n        onClose={handleSnackbarClose}\n      >\n        <Alert\n          severity={hasError ? \"error\" : \"success\"}\n          sx={{ width: \"100%\" }}\n          onClose={handleSnackbarClose}\n        >\n          {hasError ? errorMessage : \"Poll was updated successfully\"}\n        </Alert>\n      </Snackbar>\n      {isLoading ? (\n        <Typography variant=\"h2\">Fetching poll information</Typography>\n      ) : hasError ? (\n        <Typography variant=\"h2\">Something went wrong from our end</Typography>\n      ) : (\n        <>\n          <Stack rowGap={4}>\n            <Stack>\n              <Typography variant=\"h2\">{props.poll.title}</Typography>\n              <Typography variant=\"h6\">{props.poll.description}</Typography>\n            </Stack>\n            {pollOptions.length === 0 ? (\n              <Typography variant=\"body1\">\n                No poll options to show for the poll\n              </Typography>\n            ) : (\n              <Stack>\n                {pollOptions.map((pollOption) => (\n                  <Typography variant=\"body1\" key={pollOption.id}>\n                    {pollOption.text}\n                  </Typography>\n                ))}\n              </Stack>\n            )}\n            <Box display=\"inline-flex\">\n              <Button\n                variant=\"contained\"\n                disableElevation\n                onClick={endPollClickHandler}\n              >\n                End poll\n              </Button>\n            </Box>\n          </Stack>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default UpdatePollPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}