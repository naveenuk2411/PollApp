{"ast":null,"code":"var _jsxFileName = \"/Users/naveen.kumar3/PollReactApp/pollapp/src/customHooks/useAuth.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport { Snackbar, Alert } from \"@mui/material\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport SignUpModal from \"../components/SignUpModal\";\nimport axios from \"axios\";\nimport { AUTH_SERVER_SIGN_IN_URL, AUTH_SERVER_SIGN_UP_URL } from \"../constants/Routes\";\nimport { getKey, removeKey, setKey } from \"../util/sessionStorage\";\nimport { AUTH_TOKEN } from \"../constants/Auth\";\nimport jwtDecode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext(undefined);\nconst AuthenticatorProvider = props => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = React.useState(false);\n  const [isAuthLoading, setIsAuthLoading] = React.useState(false);\n  const [hasAuthError, setHasAuthError] = React.useState(false);\n  const [authErrorMessage, setAuthErrorMessage] = React.useState(\"\");\n  const [user, setUser] = React.useState(null);\n  const [signUpModalOpen, setSignUpModalOpen] = React.useState(false);\n  const [switchToSignInModal, setSwitchToSignInModal] = React.useState(false);\n  const [snackbarOpen, setSnackbarOpen] = React.useState(false);\n  const [snackbarSeverity, setSnackbarSeverity] = React.useState(\"success\");\n  const [snackbarMessage, setSnackbarMessage] = React.useState(\"\");\n  const [authToken, setAuthToken] = React.useState(\"\");\n  const navigate = useNavigate();\n  const location = useLocation();\n  React.useLayoutEffect(() => {\n    if (authToken === \"\") {\n      const authTokenFromStorage = getKey(AUTH_TOKEN);\n      if (authTokenFromStorage != \"\") {\n        const decodedToken = jwtDecode(authTokenFromStorage);\n        setUser({\n          id: decodedToken.id,\n          name: decodedToken.name,\n          email: decodedToken.email\n        });\n        setAuthToken(authTokenFromStorage);\n        setIsAuthenticated(true);\n      }\n    }\n  }, []);\n  const handleModalOpen = () => {\n    setSignUpModalOpen(true);\n  };\n  const handleModalClose = () => {\n    setSignUpModalOpen(false);\n  };\n  const handleSwitchToSignInModal = value => {\n    setSwitchToSignInModal(value);\n  };\n  const login = async (email, password) => {\n    setIsAuthLoading(true);\n    setHasAuthError(false);\n    setAuthErrorMessage(\"\");\n    setIsAuthenticated(false);\n    try {\n      const res = await axios.post(AUTH_SERVER_SIGN_IN_URL, {\n        login: {\n          password: password,\n          email: email\n        }\n      });\n      setAuthToken(res.data.token);\n      const decodedToken = jwtDecode(res.data.token);\n      setUser({\n        id: decodedToken.id,\n        name: decodedToken.name,\n        email: decodedToken.email\n      });\n      setKey(AUTH_TOKEN, res.data.token);\n      setIsAuthenticated(true);\n      setSnackbarOpen(true);\n      setSnackbarMessage(\"Successfully logged in!\");\n      setSnackbarSeverity(\"success\");\n      handleModalClose();\n    } catch (error) {\n      setHasAuthError(true);\n      setAuthErrorMessage(error.message);\n      setSnackbarOpen(true);\n      setSnackbarMessage(error.message);\n      setSnackbarSeverity(\"error\");\n    } finally {\n      setIsAuthLoading(false);\n    }\n  };\n  const register = async (name, email, password) => {\n    setIsAuthLoading(true);\n    setHasAuthError(false);\n    setAuthErrorMessage(\"\");\n    setIsAuthenticated(false);\n    axios.post(AUTH_SERVER_SIGN_UP_URL, {\n      user: {\n        name: name,\n        password: password,\n        email: email\n      }\n    }).then(res => {\n      setSnackbarOpen(true);\n      setSnackbarMessage(\"Successfully registered!, you can now login.\");\n      setSnackbarSeverity(\"success\");\n      handleModalClose();\n    }).catch(err => {\n      setHasAuthError(true);\n      setAuthErrorMessage(err.response.data);\n      setSnackbarOpen(true);\n      setSnackbarMessage(err.response.data);\n      setSnackbarSeverity(\"error\");\n    }).finally(() => {\n      setIsAuthLoading(false);\n    });\n  };\n  const logout = () => {\n    setUser({\n      id: -1,\n      name: \"\",\n      email: \"\"\n    });\n    setIsAuthenticated(false);\n    removeKey(AUTH_TOKEN);\n    setAuthToken(\"\");\n  };\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setSnackbarOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      authToken,\n      isAuthLoading,\n      switchToSignInModal,\n      login,\n      register,\n      logout,\n      handleModalOpen,\n      handleSwitchToSignInModal\n    },\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SignUpModal, {\n        isOpen: signUpModalOpen,\n        closeModal: handleModalClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: snackbarOpen,\n        autoHideDuration: 4000,\n        onClose: handleSnackbarClose,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: snackbarSeverity,\n          sx: {\n            width: \"100%\"\n          },\n          onClose: handleSnackbarClose,\n          children: snackbarMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), (location.pathname === \"/\" || location.pathname === \"/past-polls\" || isAuthenticated === true) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: props.children\n      }, void 0, false)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthenticatorProvider, \"w1XDKZfoyrhRxb9NE+hXkoh1mWY=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AuthenticatorProvider;\nconst useAuth = () => {\n  _s2();\n  const context = React.useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be within a Auth Provider\");\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport { AuthenticatorProvider, useAuth };\nvar _c;\n$RefreshReg$(_c, \"AuthenticatorProvider\");","map":{"version":3,"names":["React","Snackbar","Alert","useLocation","useNavigate","SignUpModal","axios","AUTH_SERVER_SIGN_IN_URL","AUTH_SERVER_SIGN_UP_URL","getKey","removeKey","setKey","AUTH_TOKEN","jwtDecode","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthContext","createContext","undefined","AuthenticatorProvider","props","_s","isAuthenticated","setIsAuthenticated","useState","isAuthLoading","setIsAuthLoading","hasAuthError","setHasAuthError","authErrorMessage","setAuthErrorMessage","user","setUser","signUpModalOpen","setSignUpModalOpen","switchToSignInModal","setSwitchToSignInModal","snackbarOpen","setSnackbarOpen","snackbarSeverity","setSnackbarSeverity","snackbarMessage","setSnackbarMessage","authToken","setAuthToken","navigate","location","useLayoutEffect","authTokenFromStorage","decodedToken","id","name","email","handleModalOpen","handleModalClose","handleSwitchToSignInModal","value","login","password","res","post","data","token","error","message","register","then","catch","err","response","finally","logout","handleSnackbarClose","event","reason","Provider","children","isOpen","closeModal","fileName","_jsxFileName","lineNumber","columnNumber","open","autoHideDuration","onClose","severity","sx","width","pathname","_c","useAuth","_s2","context","useContext","Error","$RefreshReg$"],"sources":["/Users/naveen.kumar3/PollReactApp/pollapp/src/customHooks/useAuth.tsx"],"sourcesContent":["import React from \"react\";\nimport { Snackbar, Alert, AlertProps } from \"@mui/material\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport SignUpModal from \"../components/SignUpModal\";\nimport { User } from \"../types/User\";\nimport axios from \"axios\";\nimport {\n  AUTH_SERVER_SIGN_IN_URL,\n  AUTH_SERVER_SIGN_UP_URL,\n} from \"../constants/Routes\";\nimport { getKey, removeKey, setKey } from \"../util/sessionStorage\";\nimport { AUTH_TOKEN } from \"../constants/Auth\";\nimport jwtDecode from \"jwt-decode\";\n\ninterface AuthenitcatorProviderProps {\n  children: React.ReactElement;\n}\n\ntype AuthStateManagement = {\n  isAuthenticated: boolean;\n  user: User | null;\n  isAuthLoading: boolean;\n  switchToSignInModal: boolean;\n  authToken: string;\n  login: (email: string, password: string) => void;\n  register: (name: string, email: string, password: string) => void;\n  logout: () => void;\n  handleModalOpen: () => void;\n  handleSwitchToSignInModal: (value: boolean) => void;\n};\n\nconst AuthContext = React.createContext<AuthStateManagement | undefined>(\n  undefined\n);\n\nconst AuthenticatorProvider = (\n  props: AuthenitcatorProviderProps\n): JSX.Element => {\n  const [isAuthenticated, setIsAuthenticated] = React.useState<boolean>(false);\n  const [isAuthLoading, setIsAuthLoading] = React.useState<boolean>(false);\n  const [hasAuthError, setHasAuthError] = React.useState<boolean>(false);\n  const [authErrorMessage, setAuthErrorMessage] = React.useState<string>(\"\");\n  const [user, setUser] = React.useState<User | null>(null);\n\n  const [signUpModalOpen, setSignUpModalOpen] = React.useState<boolean>(false);\n  const [switchToSignInModal, setSwitchToSignInModal] =\n    React.useState<boolean>(false);\n  const [snackbarOpen, setSnackbarOpen] = React.useState<boolean>(false);\n  const [snackbarSeverity, setSnackbarSeverity] =\n    React.useState<AlertProps[\"severity\"]>(\"success\");\n  const [snackbarMessage, setSnackbarMessage] = React.useState<string>(\"\");\n  const [authToken, setAuthToken] = React.useState<string>(\"\");\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  React.useLayoutEffect(() => {\n    if (authToken === \"\") {\n      const authTokenFromStorage = getKey(AUTH_TOKEN);\n      if (authTokenFromStorage != \"\") {\n        const decodedToken: User = jwtDecode(authTokenFromStorage);\n        setUser({\n          id: decodedToken.id,\n          name: decodedToken.name,\n          email: decodedToken.email,\n        });\n        setAuthToken(authTokenFromStorage);\n        setIsAuthenticated(true);\n      }\n    }\n  }, []);\n\n  const handleModalOpen = (): void => {\n    setSignUpModalOpen(true);\n  };\n\n  const handleModalClose = (): void => {\n    setSignUpModalOpen(false);\n  };\n\n  const handleSwitchToSignInModal = (value: boolean): void => {\n    setSwitchToSignInModal(value);\n  };\n\n  const login = async (email: string, password: string) => {\n    setIsAuthLoading(true);\n    setHasAuthError(false);\n    setAuthErrorMessage(\"\");\n    setIsAuthenticated(false);\n    try {\n      const res = await axios.post(AUTH_SERVER_SIGN_IN_URL, {\n        login: {\n          password: password,\n          email: email,\n        },\n      });\n      setAuthToken(res.data.token);\n      const decodedToken: User = jwtDecode(res.data.token);\n      setUser({\n        id: decodedToken.id,\n        name: decodedToken.name,\n        email: decodedToken.email,\n      });\n      setKey(AUTH_TOKEN, res.data.token);\n      setIsAuthenticated(true);\n      setSnackbarOpen(true);\n      setSnackbarMessage(\"Successfully logged in!\");\n      setSnackbarSeverity(\"success\");\n      handleModalClose();\n    } catch (error) {\n      setHasAuthError(true);\n      setAuthErrorMessage((error as Error).message);\n      setSnackbarOpen(true);\n      setSnackbarMessage((error as Error).message);\n      setSnackbarSeverity(\"error\");\n    } finally {\n      setIsAuthLoading(false);\n    }\n  };\n\n  const register = async (name: string, email: string, password: string) => {\n    setIsAuthLoading(true);\n    setHasAuthError(false);\n    setAuthErrorMessage(\"\");\n    setIsAuthenticated(false);\n\n    axios\n      .post(AUTH_SERVER_SIGN_UP_URL, {\n        user: {\n          name: name,\n          password: password,\n          email: email,\n        },\n      })\n      .then((res) => {\n        setSnackbarOpen(true);\n        setSnackbarMessage(\"Successfully registered!, you can now login.\");\n        setSnackbarSeverity(\"success\");\n        handleModalClose();\n      })\n      .catch((err) => {\n        setHasAuthError(true);\n        setAuthErrorMessage(err.response.data);\n        setSnackbarOpen(true);\n        setSnackbarMessage(err.response.data);\n        setSnackbarSeverity(\"error\");\n      })\n      .finally(() => {\n        setIsAuthLoading(false);\n      });\n  };\n\n  const logout = (): void => {\n    setUser({\n      id: -1,\n      name: \"\",\n      email: \"\",\n    });\n    setIsAuthenticated(false);\n    removeKey(AUTH_TOKEN);\n    setAuthToken(\"\");\n  };\n\n  const handleSnackbarClose = (\n    event?: React.SyntheticEvent | Event,\n    reason?: string\n  ) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setSnackbarOpen(false);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated,\n        user,\n        authToken,\n        isAuthLoading,\n        switchToSignInModal,\n        login,\n        register,\n        logout,\n        handleModalOpen,\n        handleSwitchToSignInModal,\n      }}\n    >\n      <>\n        <SignUpModal isOpen={signUpModalOpen} closeModal={handleModalClose} />\n        <Snackbar\n          open={snackbarOpen}\n          autoHideDuration={4000}\n          onClose={handleSnackbarClose}\n        >\n          <Alert\n            severity={snackbarSeverity}\n            sx={{ width: \"100%\" }}\n            onClose={handleSnackbarClose}\n          >\n            {snackbarMessage}\n          </Alert>\n        </Snackbar>\n        {(location.pathname === \"/\" ||\n          location.pathname === \"/past-polls\" ||\n          isAuthenticated === true) && <>{props.children}</>}\n      </>\n    </AuthContext.Provider>\n  );\n};\n\nconst useAuth = () => {\n  const context = React.useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be within a Auth Provider\");\n  }\n  return context;\n};\n\nexport { AuthenticatorProvider, useAuth };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}