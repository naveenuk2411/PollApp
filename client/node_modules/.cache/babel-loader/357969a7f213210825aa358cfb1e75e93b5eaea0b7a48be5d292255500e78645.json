{"ast":null,"code":"var _jsxFileName = \"/Users/naveen.kumar3/PollReactApp/pollapp/src/pages/PollResultPage.tsx\",\n  _s = $RefreshSig$();\nimport { Stack, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useAuth } from \"../customHooks/useAuth\";\nimport PollResult from \"../components/PollResult\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PollResultPage = props => {\n  _s();\n  const [pollOptions, setPollOptions] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [hasError, setHasError] = React.useState(false);\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n  const [pollVotesMap, setPollVotesMap] = React.useState(new Map());\n  const {\n    authToken,\n    user\n  } = useAuth();\n  const fetchPollOptions = async pollId => {\n    const res = await axios.get(`http://localhost:8000/polls/${pollId}/options`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    });\n    let pollOptionsData = [];\n    pollOptionsData = res.data.pollOptions.map(pollOption => {\n      return {\n        id: pollOption.id,\n        text: pollOption.text\n      };\n    });\n    setPollOptions(pollOptionsData);\n  };\n  const fetchPollVotes = async pollId => {\n    const res = await axios.get(`http://localhost:8000/polls/${pollId}/votes?user_id=${user === null || user === void 0 ? void 0 : user.id}`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    });\n    let pollVotesMapData = new Map();\n    res.data.pollVotes.forEach(vote => {\n      let prevCount = pollVotesMapData.get(vote.option.id);\n      if (prevCount === undefined) prevCount = 0;\n      pollVotesMapData.set(vote.option.id, prevCount + 1);\n    });\n    setPollVotesMap(pollVotesMapData);\n  };\n  React.useEffect(() => {\n    setIsLoading(true);\n    setHasError(false);\n    setErrorMessage(\"\");\n    try {\n      fetchPollOptions(props.poll.id);\n      fetchPollVotes(props.poll.id);\n    } catch (error) {\n      console.log(\"Error in fetching polls\", error);\n      setHasError(true);\n      setErrorMessage(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Fetching poll information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : hasError ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Something went wrong from our end\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        rowGap: 4,\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h2\",\n            children: props.poll.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: props.poll.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), pollOptions.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"No poll options to show for the poll\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Stack, {\n          rowGap: 2,\n          children: pollOptions.map(pollOption => /*#__PURE__*/_jsxDEV(PollResult, {\n            pollText: pollOption.text,\n            pollVotes: pollVotesMap.get(pollOption.id) || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n_s(PollResultPage, \"729hACKcvEw1inAH4c6eQOsYTQ4=\", false, function () {\n  return [useAuth];\n});\n_c = PollResultPage;\nexport default PollResultPage;\nvar _c;\n$RefreshReg$(_c, \"PollResultPage\");","map":{"version":3,"names":["Stack","Typography","React","axios","useAuth","PollResult","jsxDEV","_jsxDEV","Fragment","_Fragment","PollResultPage","props","_s","pollOptions","setPollOptions","useState","isLoading","setIsLoading","hasError","setHasError","errorMessage","setErrorMessage","pollVotesMap","setPollVotesMap","Map","authToken","user","fetchPollOptions","pollId","res","get","headers","Authorization","pollOptionsData","data","map","pollOption","id","text","fetchPollVotes","pollVotesMapData","pollVotes","forEach","vote","prevCount","option","undefined","set","useEffect","poll","error","console","log","message","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","rowGap","title","description","length","pollText","_c","$RefreshReg$"],"sources":["/Users/naveen.kumar3/PollReactApp/pollapp/src/pages/PollResultPage.tsx"],"sourcesContent":["import { FormControlLabel, Radio, Stack, Typography } from \"@mui/material\";\nimport { PollInfo } from \"./PollsPage\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { POLL_SERVER_POLL_OPTIONS } from \"../constants/Routes\";\nimport { useAuth } from \"../customHooks/useAuth\";\nimport PollResult from \"../components/PollResult\";\n\ninterface PollResultPageProps {\n  poll: PollInfo;\n}\n\ninterface PollOption {\n  id: number;\n  text: string;\n}\n\nconst PollResultPage = (props: PollResultPageProps): JSX.Element => {\n  const [pollOptions, setPollOptions] = React.useState<PollOption[]>([]);\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\n  const [hasError, setHasError] = React.useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = React.useState<string>(\"\");\n  const [pollVotesMap, setPollVotesMap] = React.useState<Map<number, number>>(\n    new Map<number, number>()\n  );\n  const { authToken, user } = useAuth();\n\n  const fetchPollOptions = async (pollId: number) => {\n    const res = await axios.get(\n      `http://localhost:8000/polls/${pollId}/options`,\n      {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n      }\n    );\n    let pollOptionsData: PollOption[] = [];\n    pollOptionsData = res.data.pollOptions.map((pollOption: any) => {\n      return {\n        id: pollOption.id,\n        text: pollOption.text,\n      };\n    });\n    setPollOptions(pollOptionsData);\n  };\n\n  const fetchPollVotes = async (pollId: number) => {\n    const res = await axios.get(\n      `http://localhost:8000/polls/${pollId}/votes?user_id=${user?.id}`,\n      {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n      }\n    );\n    let pollVotesMapData: Map<number, number> = new Map<number, number>();\n    res.data.pollVotes.forEach((vote: any) => {\n      let prevCount = pollVotesMapData.get(vote.option.id);\n      if (prevCount === undefined) prevCount = 0;\n      pollVotesMapData.set(vote.option.id, prevCount + 1);\n    });\n    setPollVotesMap(pollVotesMapData);\n  };\n\n  React.useEffect(() => {\n    setIsLoading(true);\n    setHasError(false);\n    setErrorMessage(\"\");\n    try {\n      fetchPollOptions(props.poll.id);\n      fetchPollVotes(props.poll.id);\n    } catch (error) {\n      console.log(\"Error in fetching polls\", error);\n      setHasError(true);\n      setErrorMessage((error as Error).message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <Typography variant=\"h2\">Fetching poll information</Typography>\n      ) : hasError ? (\n        <Typography variant=\"h2\">Something went wrong from our end</Typography>\n      ) : (\n        <>\n          <Stack rowGap={4}>\n            <Stack>\n              <Typography variant=\"h2\">{props.poll.title}</Typography>\n              <Typography variant=\"h6\">{props.poll.description}</Typography>\n            </Stack>\n            {pollOptions.length === 0 ? (\n              <Typography variant=\"body1\">\n                No poll options to show for the poll\n              </Typography>\n            ) : (\n              <Stack rowGap={2}>\n                {pollOptions.map((pollOption: any) => (\n                  <PollResult\n                    pollText={pollOption.text}\n                    pollVotes={pollVotesMap.get(pollOption.id) || 0}\n                  />\n                ))}\n              </Stack>\n            )}\n          </Stack>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default PollResultPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}