{"ast":null,"code":"var _jsxFileName = \"/Users/naveen.kumar3/PollReactApp/pollapp/src/pages/PollsPage.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Box, Stack, Typography } from \"@mui/material\";\nimport PollCard from \"../components/PollCard\";\nimport { PollPageType } from \"../types/Poll\";\nimport axios from \"axios\";\nimport { POLL_SERVER_GET_ALL_POLLS } from \"../constants/Routes\";\nimport { useAuth } from \"../customHooks/useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PollsPage = props => {\n  _s();\n  const [polls, setPolls] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [hasError, setHasError] = React.useState(false);\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n  const {\n    authToken\n  } = useAuth();\n  const fetchPolls = async () => {\n    setIsLoading(true);\n    setHasError(false);\n    setErrorMessage(\"\");\n    try {\n      const res = await axios.get(POLL_SERVER_GET_ALL_POLLS, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      let pollsData = [];\n      pollsData = res.data.polls.map(poll => {\n        if (props.pollPageType === PollPageType.ONGOING && poll.status) {\n          return {\n            id: poll.id,\n            title: poll.title,\n            desciption: poll.description\n          };\n        } else if (props.pollPageType === PollPageType.PAST && !poll.status) {\n          return {\n            id: poll.id,\n            title: poll.title,\n            desciption: poll.description\n          };\n        }\n      });\n      setPolls(pollsData);\n    } catch (error) {\n      console.log(\"Error in fetching polls\", error);\n      setHasError(true);\n      setErrorMessage(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    marginTop: \"2%\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Ongoing polls\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      marginTop: \"4em\",\n      columnGap: \"4em\",\n      rowGap: \"4em\",\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      children: props.polls.map(poll => /*#__PURE__*/_jsxDEV(PollCard, {\n        cardTitle: poll.title,\n        cardDescription: poll.description,\n        buttonText: props.pollCardButtonText,\n        onClickHandler: props.pollCardHandler\n      }, poll.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(PollsPage, \"OPTJjNcOJiYoQOdpYqPESVcDSZg=\", false, function () {\n  return [useAuth];\n});\n_c = PollsPage;\nexport default PollsPage;\nvar _c;\n$RefreshReg$(_c, \"PollsPage\");","map":{"version":3,"names":["React","Box","Stack","Typography","PollCard","PollPageType","axios","POLL_SERVER_GET_ALL_POLLS","useAuth","jsxDEV","_jsxDEV","PollsPage","props","_s","polls","setPolls","useState","isLoading","setIsLoading","hasError","setHasError","errorMessage","setErrorMessage","authToken","fetchPolls","res","get","headers","Authorization","pollsData","data","map","poll","pollPageType","ONGOING","status","id","title","desciption","description","PAST","error","console","log","message","marginTop","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","direction","columnGap","rowGap","display","flexWrap","cardTitle","cardDescription","buttonText","pollCardButtonText","onClickHandler","pollCardHandler","_c","$RefreshReg$"],"sources":["/Users/naveen.kumar3/PollReactApp/pollapp/src/pages/PollsPage.tsx"],"sourcesContent":["import React from \"react\";\nimport { Box, Stack, Typography } from \"@mui/material\";\nimport PollCard from \"../components/PollCard\";\nimport { PollPageType } from \"../types/Poll\";\nimport axios from \"axios\";\nimport { POLL_SERVER_GET_ALL_POLLS } from \"../constants/Routes\";\nimport { useAuth } from \"../customHooks/useAuth\";\n\nexport interface PollInfo {\n  id: number;\n  title: string;\n  description: string;\n}\n\ninterface ActivePollsPageProps {\n  pollPageType: PollPageType;\n  pollCardButtonText: string;\n  pollCardHandler: () => void;\n}\n\nconst PollsPage = (props: ActivePollsPageProps): JSX.Element => {\n  const [polls, setPolls] = React.useState<PollInfo[]>([]);\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\n  const [hasError, setHasError] = React.useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = React.useState<string>(\"\");\n\n  const { authToken } = useAuth();\n\n  const fetchPolls = async () => {\n    setIsLoading(true);\n    setHasError(false);\n    setErrorMessage(\"\");\n    try {\n      const res = await axios.get(POLL_SERVER_GET_ALL_POLLS, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n      });\n      let pollsData: PollInfo[] = [];\n      pollsData = res.data.polls.map((poll: any) => {\n        if (props.pollPageType === PollPageType.ONGOING && poll.status) {\n          return {\n            id: poll.id,\n            title: poll.title,\n            desciption: poll.description,\n          };\n        } else if (props.pollPageType === PollPageType.PAST && !poll.status) {\n          return {\n            id: poll.id,\n            title: poll.title,\n            desciption: poll.description,\n          };\n        }\n      });\n      setPolls(pollsData);\n    } catch (error) {\n      console.log(\"Error in fetching polls\", error);\n      setHasError(true);\n      setErrorMessage((error as Error).message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Box marginTop=\"2%\">\n      <Typography variant=\"h2\">Ongoing polls</Typography>\n      <Stack\n        direction=\"row\"\n        marginTop=\"4em\"\n        columnGap=\"4em\"\n        rowGap=\"4em\"\n        display=\"flex\"\n        flexWrap=\"wrap\"\n      >\n        {props.polls.map((poll) => (\n          <PollCard\n            key={poll.id}\n            cardTitle={poll.title}\n            cardDescription={poll.description}\n            buttonText={props.pollCardButtonText}\n            onClickHandler={props.pollCardHandler}\n          />\n        ))}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default PollsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}