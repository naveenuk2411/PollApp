{"ast":null,"code":"var _jsxFileName = \"/Users/naveen.kumar3/PollReactApp/pollapp/src/customHooks/useAuth.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport { Snackbar, Alert } from \"@mui/material\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport SignUpModal from \"../components/SignUpModal\";\nimport axios from \"axios\";\nimport { AUTH_SERVER_SIGN_IN_URL, AUTH_SERVER_SIGN_UP_URL } from \"../constants/Routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext(undefined);\nconst AuthenticatorProvider = props => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [hasError, setHasError] = React.useState(false);\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n  const [user, setUser] = React.useState({\n    id: -1,\n    name: \"\",\n    email: \"\"\n  });\n  const [signUpModalOpen, setSignUpModalOpen] = React.useState(false);\n  const [switchToSignInModal, setSwitchToSignInModal] = React.useState(false);\n  const [snackbarOpen, setSnackbarOpen] = React.useState(false);\n  const [snackbarSeverity, setSnackbarSeverity] = React.useState(\"success\");\n  const [snackbarMessage, setSnackbarMessage] = React.useState(\"\");\n  const [authToken, setAuthToken] = React.useState(\"\");\n  const navigate = useNavigate();\n  const location = useLocation();\n  React.useEffect(() => {\n    if (!isAuthenticated) {\n      navigate(\"/\");\n    }\n  }, [isAuthenticated]);\n  const handleModalOpen = () => {\n    setSignUpModalOpen(true);\n  };\n  const handleModalClose = () => {\n    setSignUpModalOpen(false);\n  };\n  const handleSwitchToSignInModal = value => {\n    setSwitchToSignInModal(value);\n  };\n  const login = async (email, password) => {\n    setIsLoading(true);\n    setHasError(false);\n    setErrorMessage(\"\");\n    setIsAuthenticated(false);\n    axios.post(AUTH_SERVER_SIGN_IN_URL, {\n      login: {\n        password: password,\n        email: email\n      }\n    }).then(res => {\n      setAuthToken(res.data.token);\n      setIsAuthenticated(true);\n      setSnackbarOpen(true);\n      setSnackbarMessage(\"Successfully logged in!\");\n      setSnackbarSeverity(\"success\");\n      handleModalClose();\n    }).catch(err => {\n      console.log(\"error\", err);\n      setSnackbarOpen(true);\n      setSnackbarMessage(err.message);\n      setSnackbarSeverity(\"error\");\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n  const register = async (name, email, password) => {\n    setIsLoading(true);\n    setHasError(false);\n    setErrorMessage(\"\");\n    setIsAuthenticated(false);\n    axios.post(AUTH_SERVER_SIGN_UP_URL, {\n      user: {\n        name: name,\n        password: password,\n        email: email\n      }\n    }).then(res => {\n      setSnackbarOpen(true);\n      setSnackbarMessage(\"Successfully registered!, you can now login.\");\n      setSnackbarSeverity(\"success\");\n      handleModalClose();\n    }).catch(err => {\n      setSnackbarOpen(true);\n      setSnackbarMessage(err.response.data);\n      setSnackbarSeverity(\"error\");\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n  const logout = () => {\n    setUser({\n      id: -1,\n      name: \"\",\n      email: \"\"\n    });\n    setIsAuthenticated(false);\n  };\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setSnackbarOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      authToken,\n      isLoading,\n      switchToSignInModal,\n      login,\n      register,\n      logout,\n      handleModalOpen,\n      handleSwitchToSignInModal\n    },\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SignUpModal, {\n        isOpen: signUpModalOpen,\n        closeModal: handleModalClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: snackbarOpen,\n        autoHideDuration: 4000,\n        onClose: handleSnackbarClose,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: snackbarSeverity,\n          sx: {\n            width: \"100%\"\n          },\n          onClose: handleSnackbarClose,\n          children: snackbarMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), (location.pathname === \"/\" || location.pathname === \"/past-polls\" || isAuthenticated) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: props.children\n      }, void 0, false)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthenticatorProvider, \"NUmNq2axb67dwHtQO4CxCuMJpiY=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AuthenticatorProvider;\nconst useAuth = () => {\n  _s2();\n  const context = React.useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be within a Auth Provider\");\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport { AuthenticatorProvider, useAuth };\nvar _c;\n$RefreshReg$(_c, \"AuthenticatorProvider\");","map":{"version":3,"names":["React","Snackbar","Alert","useLocation","useNavigate","SignUpModal","axios","AUTH_SERVER_SIGN_IN_URL","AUTH_SERVER_SIGN_UP_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthContext","createContext","undefined","AuthenticatorProvider","props","_s","isAuthenticated","setIsAuthenticated","useState","isLoading","setIsLoading","hasError","setHasError","errorMessage","setErrorMessage","user","setUser","id","name","email","signUpModalOpen","setSignUpModalOpen","switchToSignInModal","setSwitchToSignInModal","snackbarOpen","setSnackbarOpen","snackbarSeverity","setSnackbarSeverity","snackbarMessage","setSnackbarMessage","authToken","setAuthToken","navigate","location","useEffect","handleModalOpen","handleModalClose","handleSwitchToSignInModal","value","login","password","post","then","res","data","token","catch","err","console","log","message","finally","register","response","logout","handleSnackbarClose","event","reason","Provider","children","isOpen","closeModal","fileName","_jsxFileName","lineNumber","columnNumber","open","autoHideDuration","onClose","severity","sx","width","pathname","_c","useAuth","_s2","context","useContext","Error","$RefreshReg$"],"sources":["/Users/naveen.kumar3/PollReactApp/pollapp/src/customHooks/useAuth.tsx"],"sourcesContent":["import React from \"react\";\nimport { Snackbar, Alert, AlertProps } from \"@mui/material\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport SignUpModal from \"../components/SignUpModal\";\nimport { User } from \"../types/User\";\nimport axios from \"axios\";\nimport {\n  AUTH_SERVER_SIGN_IN_URL,\n  AUTH_SERVER_SIGN_UP_URL,\n} from \"../constants/Routes\";\n\ninterface AuthenitcatorProviderProps {\n  children: React.ReactElement;\n}\n\ntype AuthStateManagement = {\n  isAuthenticated: boolean;\n  user: User;\n  isLoading: boolean;\n  switchToSignInModal: boolean;\n  authToken: string;\n  login: (email: string, password: string) => void;\n  register: (name: string, email: string, password: string) => void;\n  logout: () => void;\n  handleModalOpen: () => void;\n  handleSwitchToSignInModal: (value: boolean) => void;\n};\n\nconst AuthContext = React.createContext<AuthStateManagement | undefined>(\n  undefined\n);\n\nconst AuthenticatorProvider = (\n  props: AuthenitcatorProviderProps\n): JSX.Element => {\n  const [isAuthenticated, setIsAuthenticated] = React.useState<boolean>(false);\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\n  const [hasError, setHasError] = React.useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = React.useState<string>(\"\");\n  const [user, setUser] = React.useState<User>({\n    id: -1,\n    name: \"\",\n    email: \"\",\n  });\n\n  const [signUpModalOpen, setSignUpModalOpen] = React.useState<boolean>(false);\n  const [switchToSignInModal, setSwitchToSignInModal] =\n    React.useState<boolean>(false);\n  const [snackbarOpen, setSnackbarOpen] = React.useState<boolean>(false);\n  const [snackbarSeverity, setSnackbarSeverity] =\n    React.useState<AlertProps[\"severity\"]>(\"success\");\n  const [snackbarMessage, setSnackbarMessage] = React.useState<string>(\"\");\n  const [authToken, setAuthToken] = React.useState<string>(\"\");\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  React.useEffect(() => {\n    if (!isAuthenticated) {\n      navigate(\"/\");\n    }\n  }, [isAuthenticated]);\n\n  const handleModalOpen = (): void => {\n    setSignUpModalOpen(true);\n  };\n\n  const handleModalClose = (): void => {\n    setSignUpModalOpen(false);\n  };\n\n  const handleSwitchToSignInModal = (value: boolean): void => {\n    setSwitchToSignInModal(value);\n  };\n\n  const login = async (email: string, password: string) => {\n    setIsLoading(true);\n    setHasError(false);\n    setErrorMessage(\"\");\n    setIsAuthenticated(false);\n\n    axios\n      .post(AUTH_SERVER_SIGN_IN_URL, {\n        login: {\n          password: password,\n          email: email,\n        },\n      })\n      .then((res) => {\n        setAuthToken(res.data.token);\n        setIsAuthenticated(true);\n        setSnackbarOpen(true);\n        setSnackbarMessage(\"Successfully logged in!\");\n        setSnackbarSeverity(\"success\");\n        handleModalClose();\n      })\n      .catch((err) => {\n        console.log(\"error\", err);\n        setSnackbarOpen(true);\n        setSnackbarMessage(err.message);\n        setSnackbarSeverity(\"error\");\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const register = async (name: string, email: string, password: string) => {\n    setIsLoading(true);\n    setHasError(false);\n    setErrorMessage(\"\");\n    setIsAuthenticated(false);\n\n    axios\n      .post(AUTH_SERVER_SIGN_UP_URL, {\n        user: {\n          name: name,\n          password: password,\n          email: email,\n        },\n      })\n      .then((res) => {\n        setSnackbarOpen(true);\n        setSnackbarMessage(\"Successfully registered!, you can now login.\");\n        setSnackbarSeverity(\"success\");\n        handleModalClose();\n      })\n      .catch((err) => {\n        setSnackbarOpen(true);\n        setSnackbarMessage(err.response.data);\n        setSnackbarSeverity(\"error\");\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const logout = (): void => {\n    setUser({\n      id: -1,\n      name: \"\",\n      email: \"\",\n    });\n    setIsAuthenticated(false);\n  };\n\n  const handleSnackbarClose = (\n    event?: React.SyntheticEvent | Event,\n    reason?: string\n  ) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setSnackbarOpen(false);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated,\n        user,\n        authToken,\n        isLoading,\n        switchToSignInModal,\n        login,\n        register,\n        logout,\n        handleModalOpen,\n        handleSwitchToSignInModal,\n      }}\n    >\n      <>\n        <SignUpModal isOpen={signUpModalOpen} closeModal={handleModalClose} />\n        <Snackbar\n          open={snackbarOpen}\n          autoHideDuration={4000}\n          onClose={handleSnackbarClose}\n        >\n          <Alert\n            severity={snackbarSeverity}\n            sx={{ width: \"100%\" }}\n            onClose={handleSnackbarClose}\n          >\n            {snackbarMessage}\n          </Alert>\n        </Snackbar>\n        {(location.pathname === \"/\" ||\n          location.pathname === \"/past-polls\" ||\n          isAuthenticated) && <>{props.children}</>}\n      </>\n    </AuthContext.Provider>\n  );\n};\n\nconst useAuth = () => {\n  const context = React.useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be within a Auth Provider\");\n  }\n  return context;\n};\n\nexport { AuthenticatorProvider, useAuth };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}